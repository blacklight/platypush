{"version":3,"file":"static/js/2981.4006f92d.js","mappings":"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","sources":["webpack://platypush/./src/components/panels/CameraAndroidIpcam/Index.vue","webpack://platypush/./src/components/panels/CameraAndroidIpcam/Index.vue?3624"],"sourcesContent":["<template>\n  <div class=\"camera\">\n    <Loading v-if=\"loading\" />\n\n    <div class=\"camera-selector\">\n      <div class=\"left\">\n        <label>\n          <select ref=\"cameraSelector\" @change=\"onCameraSelected\">\n            <option selected disabled v-if=\"!Object.keys(cameras).length\">-- No cameras available</option>\n            <option v-for=\"name in Object.keys(cameras)\" :key=\"name\" :value=\"name\" v-text=\"name\" />\n          </select>\n        </label>\n      </div>\n\n      <div class=\"right\">\n        <button type=\"button\" @click=\"updateCameraStatus\" :disabled=\"loading\">\n          <i class=\"fas fa-sync-alt\" title=\"Refresh cameras\" />\n        </button>\n      </div>\n    </div>\n\n    <div class=\"camera-container\">\n      <div class=\"frame-container\" ref=\"frameContainer\">\n        <div class=\"no-frame\" v-if=\"!streaming && !capturing && !captured\">The camera is not active</div>\n        <img class=\"frame\" ref=\"frame\" alt=\"\" src=\"\">\n      </div>\n\n      <div class=\"controls\">\n        <div class=\"left\">\n          <button type=\"button\" @click=\"startStreaming\" :disabled=\"capturing || loading\" v-if=\"!streaming\">\n            <i class=\"fa fa-play\" title=\"Start video\" />\n          </button>\n\n          <button type=\"button\" @click=\"stopStreaming\" :disabled=\"capturing || loading\" v-else>\n            <i class=\"fa fa-stop\" title=\"Stop video\" />\n          </button>\n\n          <button type=\"button\" @click=\"capture\" :disabled=\"streaming || capturing || loading\">\n            <i class=\"fas fa-camera\" title=\"Take a picture\" />\n          </button>\n        </div>\n\n        <div class=\"right\">\n          <button type=\"button\" @click=\"flipCamera\" :disabled=\"loading\">\n            <i class=\"fas fa-retweet\" title=\"Flip camera\" />\n          </button>\n\n          <button type=\"button\" @click=\"recording = true\" v-if=\"!recording\" :disabled=\"loading\">\n            <i class=\"fa fa-volume-mute\" title=\"Start audio\" />\n          </button>\n\n          <button type=\"button\" @click=\"recording = false\" v-else :disabled=\"loading\">\n            <i class=\"fa fa-volume-up\" title=\"Stop audio\" />\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"sound-container\">\n      <audio autoplay preload=\"none\" ref=\"player\" v-if=\"recording\">\n        <source :src=\"cameras[selectedCamera].audio_url\" type=\"audio/x-wav;codec=pcm\">\n        Your browser does not support audio elements\n      </audio>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Utils from \"@/Utils\";\nimport Loading from \"@/components/Loading\";\n\nexport default {\n  name: \"CameraAndroidIpcam\",\n  components: {Loading},\n  mixins: [Utils],\n\n  data() {\n    return {\n      loading: false,\n      streaming: false,\n      capturing: false,\n      recording: false,\n      captured: false,\n      cameras: {},\n      selectedCamera: undefined,\n    }\n  },\n\n  computed: {\n    configuredCameras() {\n      const config = this.$root.config['camera.android.ipcam']\n      let cameras = config.cameras || []\n\n      if (!cameras.length) {\n        const name = config.name || config.host\n        cameras[name] = {\n          'name': name,\n          'host': config.host,\n          'port': config.port,\n          'username': config.username,\n          'password': config.password,\n          'timeout': config.timeout,\n          'ssl': config.ssl,\n        }\n      } else {\n        cameras = cameras.reduce((cameras, cam) => {\n          const name = cam.name || cam.host\n          cameras[name] = cam\n          return cameras\n        }, {})\n      }\n\n      return cameras\n    },\n  },\n\n  methods: {\n    startStreaming() {\n      if (this.streaming)\n        return\n\n      const cam = this.cameras[this.selectedCamera]\n      this.streaming = true\n      this.capturing = false\n      this.captured = false\n      this.$refs.frame.setAttribute('src', cam.stream_url)\n    },\n\n    stopStreaming() {\n      if (!this.streaming)\n        return\n\n      this.streaming = false\n      this.capturing = false\n      this.$refs.frame.removeAttribute('src')\n    },\n\n    capture() {\n      if (this.capturing)\n        return\n\n      const cam = this.cameras[this.selectedCamera]\n      this.streaming = false\n      this.capturing = true\n      this.captured = true\n      this.$refs.frame.setAttribute('src', cam.image_url + '?t=' + (new Date()).getTime())\n    },\n\n    onFrameLoaded() {\n      if (this.capturing)\n        this.capturing = false\n    },\n\n    onCameraSelected(event) {\n      this.selectedCamera = event.target.value\n    },\n\n    async flipCamera() {\n      const cam = this.cameras[this.selectedCamera]\n      this.loading = true\n\n      try {\n        const value = !cam.ffc\n        await this.request('camera.android.ipcam.set_front_facing_camera', {\n          activate: value, camera: cam.name\n        })\n\n        this.cameras[this.selectedCamera].ffc = value\n      } finally {\n        this.loading = false\n      }\n    },\n\n    async updateCameraStatus() {\n      this.loading = true\n\n      try {\n        const cameras = await this.request('camera.android.ipcam.status')\n        this.cameras = cameras.reduce((cameras, cam) => {\n          for (const attr of ['stream_url', 'image_url', 'audio_url']) {\n            if (cam[attr].startsWith('https://')) {\n              cam[attr] = cam[attr].replace('https://', 'http://')\n            }\n\n            if (cam.name in this.configuredCameras && this.configuredCameras[cam.name].username) {\n              cam[attr] = 'http://' + this.config.cameras[cam.name].username + ':' +\n                  this.config.cameras[cam.name].password + '@' + cam[attr].substr(7)\n            }\n          }\n\n          cameras[cam.name] = cam\n          return cameras\n        }, {})\n\n        if (cameras.length)\n          this.selectedCamera = cameras[0].name\n\n      } finally {\n        this.loading = false\n      }\n    },\n  },\n\n  mounted() {\n    this.$refs.frame.addEventListener('load', this.onFrameLoaded)\n    this.updateCameraStatus()\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../Camera/common\";\n\n$controls-height: 3.5em;\n\n.camera {\n  .camera-selector {\n    width: 100%;\n    height: $controls-height;\n    margin-top: -3em;\n    box-shadow: $border-shadow-bottom;\n    display: flex;\n    align-items: center;\n\n    .left,\n    .right {\n      display: flex;\n    }\n\n    .left {\n      width: 90%;\n    }\n\n    .right {\n      width: 10%;\n      justify-content: right;\n    }\n\n    label {\n      width: 100%;\n      padding-left: 1em;\n      select {\n        width: 100%;\n      }\n    }\n\n    button {\n      background: none;\n      border: none;\n      &:hover {\n        color: $default-hover-fg;\n      }\n    }\n  }\n\n  .camera-container {\n    margin-top: 2em;\n    min-width: 640px;\n    min-height: calc(480px + #{$controls-height});\n\n    .frame-container {\n      min-width: 640px;\n      min-height: 480px;\n    }\n\n    .controls {\n      height: $controls-height;\n    }\n  }\n}\n\n//.camera {\n//  min-height: 90%;\n//  overflow: auto;\n//  display: flex;\n//  flex-direction: column;\n//  align-items: center;\n//\n//  .camera-container {\n//    min-width: 640px;\n//    min-height: 480px;\n//    position: relative;\n//    background: black;\n//    margin-bottom: 1em;\n//\n//    .frame, .no-frame {\n//      position: absolute;\n//      top: 0;\n//      width: 100%;\n//      height: 100%;\n//    }\n//\n//    .frame {\n//      z-index: 1;\n//    }\n//\n//    .no-frame {\n//      display: flex;\n//      background: rgba(0, 0, 0, 0.1);\n//      color: white;\n//      align-items: center;\n//      justify-content: center;\n//      z-index: 2;\n//    }\n//  }\n//}\n</style>\n","import { render } from \"./Index.vue?vue&type=template&id=1334f746&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=1334f746&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1334f746\"]])\n\nexport default __exports__"],"names":["class","selected","disabled","ref","alt","src","autoplay","preload","_createElementBlock","_hoisted_1","$data","loading","_createBlock","_component_Loading","key","_createElementVNode","_hoisted_2","_hoisted_3","onChange","_cache","args","$options","onCameraSelected","Object","keys","cameras","length","_hoisted_4","_Fragment","_renderList","name","value","_toDisplayString","_hoisted_6","type","onClick","updateCameraStatus","title","_hoisted_8","_hoisted_9","streaming","capturing","captured","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","stopStreaming","startStreaming","capture","_hoisted_17","flipCamera","recording","$event","_hoisted_21","_hoisted_22","selectedCamera","audio_url","components","Loading","mixins","Utils","data","undefined","computed","configuredCameras","config","this","$root","reduce","cam","host","port","username","password","timeout","ssl","methods","$refs","frame","setAttribute","stream_url","removeAttribute","image_url","Date","getTime","onFrameLoaded","event","target","ffc","request","activate","camera","attr","startsWith","replace","substr","mounted","addEventListener","__exports__","render"],"sourceRoot":""}