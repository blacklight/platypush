{"version":3,"file":"static/js/9636.4fd56858.js","mappings":"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","sources":["webpack://platypush/./src/components/panels/Procedures/Index.vue","webpack://platypush/./src/components/panels/Procedures/Index.vue?c2b2"],"sourcesContent":["<template>\n  <div class=\"procedures-container\">\n    <header>\n      <input type=\"search\"\n             class=\"filter\"\n             title=\"Filter procedures\"\n             placeholder=\"ðŸ”Ž\"\n             v-model=\"filter\" />\n    </header>\n\n    <main>\n      <Loading v-if=\"loading\" />\n\n      <NoItems v-else-if=\"!Object.keys(procedures || {}).length\">\n        No Procedures Configured\n      </NoItems>\n\n      <div class=\"procedures-list\" v-else>\n        <div class=\"procedures items\">\n          <div class=\"item\" v-for=\"procedure in displayedProcedures\" :key=\"procedure.name\">\n            <Procedure :value=\"procedure\"\n                       :selected=\"selectedProcedure === procedure.name\"\n                       :collapseOnHeaderClick=\"true\"\n                       @click=\"toggleProcedure(procedure)\"\n                       @input=\"updateProcedure(procedure)\"\n                       @delete=\"() => delete procedures[procedure.name]\" />\n          </div>\n        </div>\n      </div>\n\n      <ProcedureEditor :value=\"newProcedure\"\n                       title=\"Add Procedure\"\n                       :with-name=\"true\"\n                       :with-save=\"true\"\n                       :read-only=\"false\"\n                       :visible=\"showNewProcedureEditor\"\n                       @input=\"updateProcedure(newProcedure)\"\n                       @close=\"resetNewProcedure\"\n                       v-if=\"showNewProcedureEditor\" />\n\n      <FloatingButton icon-class=\"fa fa-plus\"\n                      text=\"Add Procedure\"\n                      @click=\"showNewProcedureEditor = true\" />\n    </main>\n  </div>\n</template>\n\n<script>\nimport Loading from \"@/components/Loading\";\nimport FloatingButton from \"@/components/elements/FloatingButton\";\nimport NoItems from \"@/components/elements/NoItems\";\nimport Procedure from \"@/components/panels/Entities/Procedure\"\nimport ProcedureEditor from \"@/components/Procedure/ProcedureEditorModal\"\nimport Utils from \"@/Utils\";\n\nexport default {\n  components: {\n    FloatingButton,\n    Loading,\n    NoItems,\n    Procedure,\n    ProcedureEditor,\n  },\n\n  mixins: [Utils],\n  props: {\n    pluginName: {\n      type: String,\n    },\n\n    config: {\n      type: Object,\n      default: () => {},\n    },\n  },\n\n  data() {\n    return {\n      filter: '',\n      loading: false,\n      newProcedure: null,\n      newProcedureTemplate: {\n        name: '',\n        actions: [],\n        meta: {\n          icon: {\n            class: 'fas fa-cogs',\n            url: null,\n            color: null,\n          },\n        },\n      },\n      procedures: {},\n      selectedProcedure: null,\n      showConfirmClose: false,\n      showNewProcedureEditor: false,\n    }\n  },\n\n  computed: {\n    displayedProcedures() {\n      return Object.values(this.procedures)\n        .filter(procedure => procedure.name.toLowerCase().includes(this.filter.toLowerCase()))\n    },\n  },\n\n  methods: {\n    mergeArgs(oldObj, newObj) {\n      return {\n        ...Object.fromEntries(\n          Object.entries(oldObj || {}).map(([key, value]) => {\n            const newValue = newObj?.[key]\n            if (newValue != null) {\n              if (typeof value === 'object' && !Array.isArray(value))\n                return [key, this.mergeArgs(value, newValue)]\n\n              return [key, newValue]\n            }\n\n            return [key, value]\n          })\n        ),\n\n        ...Object.fromEntries(\n          Object.entries(newObj || {}).filter(([key]) => oldObj?.[key] == null)\n        ),\n      }\n    },\n\n    updateProcedure(procedure) {\n      if (!procedure?.name?.length)\n        return\n\n      const curProcedure = this.procedures[procedure.name]\n      this.procedures[procedure.name] = {\n        ...this.mergeArgs(curProcedure, procedure),\n        name: procedure?.meta?.name_override || procedure.name,\n      }\n\n      this.showNewProcedureEditor = false\n    },\n\n    async refresh() {\n      const args = this.getUrlArgs()\n      if (args.filter)\n        this.filter = args.filter\n\n      this.loading = true\n      try {\n        this.procedures = await this.request('procedures.status')\n      } finally {\n        this.loading = false\n      }\n    },\n\n    onEntityUpdate(msg) {\n      const entity = msg?.entity\n      if (entity?.plugin !== this.pluginName || !entity?.name?.length)\n        return\n\n      this.updateProcedure(entity)\n    },\n\n    onEntityDelete(msg) {\n      const entity = msg?.entity\n      if (entity?.plugin !== this.pluginName)\n        return\n\n      if (this.selectedProcedure === entity.name)\n        this.selectedProcedure = null\n\n      if (this.procedures[entity.name])\n        delete this.procedures[entity.name]\n    },\n\n    resetNewProcedure() {\n      this.showNewProcedureEditor = false\n      this.newProcedure = JSON.parse(JSON.stringify(this.newProcedureTemplate))\n    },\n\n    toggleProcedure(procedure) {\n      this.selectedProcedure =\n        this.selectedProcedure === procedure.name ?\n        null : procedure.name\n    },\n  },\n\n  watch: {\n    filter() {\n      if (!this.filter?.length)\n        this.setUrlArgs({ filter: null })\n      else\n        this.setUrlArgs({ filter: this.filter })\n    },\n\n    showNewProcedureEditor(val) {\n      if (!val)\n        this.resetNewProcedure()\n    },\n  },\n\n  async mounted() {\n    this.resetNewProcedure()\n    await this.refresh()\n\n    this.subscribe(\n      this.onEntityUpdate,\n      'on-procedure-entity-update',\n      'platypush.message.event.entities.EntityUpdateEvent'\n    )\n\n    this.subscribe(\n      this.onEntityDelete,\n      'on-procedure-entity-delete',\n      'platypush.message.event.entities.EntityDeleteEvent'\n    )\n  },\n\n  unmounted() {\n    this.unsubscribe('on-procedure-entity-update')\n    this.unsubscribe('on-procedure-entity-delete')\n    this.setUrlArgs({ filter: null })\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/style/items\";\n\n$header-height: 3em;\n\n.procedures-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  header {\n    width: 100%;\n    height: $header-height;\n    background: $tab-bg;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-bottom: 1px solid $default-shadow-color;\n\n    input.filter {\n      max-width: 600px;\n\n      @include until($tablet) {\n        width: calc(100% - 2em);\n      }\n\n      @include from($tablet) {\n        width: 600px;\n      }\n    }\n  }\n\n  main {\n    width: 100%;\n    height: calc(100% - #{$header-height});\n    overflow: auto;\n    margin-bottom: 2em;\n  }\n\n  .procedures-list {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    background: $default-bg-6;\n    flex-grow: 1;\n    justify-content: center;\n  }\n\n  .procedures {\n    @include until($tablet) {\n      width: 100%;\n    }\n\n    @include from($tablet) {\n      width: calc(100% - 2em);\n      margin-top: 1em;\n      border-radius: 1em;\n    }\n\n    max-width: 800px;\n    background: $default-bg-2;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: auto;\n    box-shadow: $border-shadow-bottom-right;\n\n    .item {\n      padding: 0;\n\n      &:first-child {\n        border-top-left-radius: 1em;\n        border-top-right-radius: 1em;\n      }\n\n      &:last-child {\n        border-bottom-left-radius: 1em;\n        border-bottom-right-radius: 1em;\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./Index.vue?vue&type=template&id=627349c3&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=627349c3&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-627349c3\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","type","title","placeholder","$data","filter","$event","loading","_createBlock","_component_Loading","key","Object","keys","procedures","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","displayedProcedures","procedure","name","_createVNode","_component_Procedure","value","selected","selectedProcedure","collapseOnHeaderClick","onClick","toggleProcedure","onInput","updateProcedure","onDelete","_component_NoItems","showNewProcedureEditor","_component_ProcedureEditor","newProcedure","visible","_cache","onClose","resetNewProcedure","_component_FloatingButton","text","components","FloatingButton","Loading","NoItems","Procedure","ProcedureEditor","mixins","Utils","props","pluginName","String","config","default","data","newProcedureTemplate","actions","meta","icon","url","color","showConfirmClose","computed","values","this","toLowerCase","includes","methods","mergeArgs","oldObj","newObj","fromEntries","entries","map","newValue","Array","isArray","curProcedure","name_override","refresh","args","getUrlArgs","request","onEntityUpdate","msg","entity","plugin","onEntityDelete","JSON","parse","stringify","watch","setUrlArgs","val","mounted","subscribe","unmounted","unsubscribe","__exports__","render"],"sourceRoot":""}