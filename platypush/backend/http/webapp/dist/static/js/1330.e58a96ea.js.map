{"version":3,"file":"static/js/1330.e58a96ea.js","mappings":"mLACKA,MAAM,sB,0CAAXC,EAAAA,EAAAA,IAIM,MAJNC,EAIM,EAHJC,EAAAA,EAAAA,GAEM,OAFDH,OAAKI,EAAAA,EAAAA,IAAA,CAAC,mBAAkB,CAAAC,OAAkBC,EAAAC,e,EAC7CC,EAAAA,EAAAA,IAAQC,EAAAC,OAAA,kBAAAC,GAAA,Q,CAMZ,OACEC,KAAM,UACNC,MAAO,CACLN,WAAY,CACVO,KAAMC,QACNC,SAAS,K,UCPf,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O,2FCROlB,MAAM,sB,kHAAXC,EAAAA,EAAAA,IAkBM,MAlBNC,EAkBM,CAjBWiB,EAAAC,YAAS,WAAxBC,EAAAA,EAAAA,IAA4BC,EAAA,CAAAC,IAAA,KACcC,EAAAC,MAAMC,S,WAIhDL,EAAAA,EAAAA,IAWkBM,EAAA,C,MAXRC,QAASJ,EAAAC,KACTI,OAAQvB,EAAAuB,OACRC,QAAS,aACT,kBAAiBN,EAAAO,eACjBC,gBAAeC,EAAA,KAAAA,EAAA,GAAAC,GAAEzB,EAAA0B,MAAM,kBAAmBD,IAC1CE,WAAQH,EAAA,KAAAA,EAAA,GAAAC,GAAEzB,EAAA0B,MAAM,WAAYD,IAC5BG,gBAAcJ,EAAA,KAAAA,EAAA,GAAAC,GAAEzB,EAAA0B,MAAM,iBAAkBD,IACxCI,cAAYL,EAAA,KAAAA,EAAA,GAAAC,GAAEzB,EAAA0B,MAAM,eAAgBD,IACpCK,SAAMN,EAAA,KAAAA,EAAA,GAAAC,GAAEV,EAAAO,eAAiBG,GACzBM,OAAIP,EAAA,KAAAA,EAAA,GAAAC,GAAEzB,EAAA0B,MAAM,OAAQD,IACpBO,YAAUR,EAAA,KAAAA,EAAA,GAAAC,GAAEzB,EAAA0B,MAAM,aAAcD,K,kDAdY,WAAtDb,EAAAA,EAAAA,IAEUqB,EAAA,C,MAFA,eAAa,G,mBAAiC,IAExD,UAFwD,yB,qDAyB5D,GACEC,OAAQ,CAACC,EAAAA,GACTC,MAAO,CACL,kBACA,WACA,iBACA,eACA,OACA,cAGFC,WAAY,CACVC,QAAO,IACPC,QAAO,IACPC,QAAOA,EAAAA,GAGTpC,MAAO,CACLgB,OAAQ,CACNf,KAAMoC,OACNlC,QAAS,MAGXmC,QAAS,CACPrC,KAAMC,QACNC,SAAS,IAIboC,IAAAA,GACE,MAAO,CACL3B,KAAM,GACN4B,UAAU,EACVtB,eAAgB,KAEpB,EAEAuB,SAAU,CACRlC,SAAAA,GACE,OAAOmC,KAAKF,UAAYE,KAAKJ,OAC/B,GAGFK,QAAS,CACP,cAAMC,GACJF,KAAKF,UAAW,EAChB,IACEE,KAAK9B,YAAc8B,KAAKG,QAAQ,qBAAqBC,KAAIC,IAAG,IACvDA,EACH9C,KAAM,aAEV,CAAE,QACAyC,KAAKF,UAAW,CAClB,CACF,GAGFQ,OAAAA,GACEN,KAAKE,UACP,G,UChFF,MAAMxC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://platypush/./src/components/elements/NoItems.vue","webpack://platypush/./src/components/elements/NoItems.vue?70de","webpack://platypush/./src/components/panels/Media/Providers/YouTube/Feed.vue","webpack://platypush/./src/components/panels/Media/Providers/YouTube/Feed.vue?abe5"],"sourcesContent":["<template>\n<div class=\"no-items-container\">\n  <div class=\"no-items fade-in\" :class=\"{shadow: withShadow}\">\n    <slot />\n  </div>\n</div>\n</template>\n\n<script>\nexport default {\n  name: \"NoItems\",\n  props: {\n    withShadow: {\n      type: Boolean,\n      default: true,\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.no-items-container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .no-items {\n    min-width: 100%;\n    max-width: 100%;\n\n    @include from($tablet) {\n      min-width: 80%;\n    }\n\n    @include from($desktop) {\n      min-width: 50%;\n      max-width: 35em;\n    }\n\n    @include from($fullhd) {\n      min-width: 33%;\n    }\n\n    background: $background-color;\n    margin: 1em;\n    padding: 1em;\n    font-size: 1.5em;\n    color: $no-items-color;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 1em;\n\n    &.shadow {\n      box-shadow: $border-shadow-bottom;\n    }\n  }\n}\n</style>\n","import { render } from \"./NoItems.vue?vue&type=template&id=4856c4d7&scoped=true\"\nimport script from \"./NoItems.vue?vue&type=script&lang=js\"\nexport * from \"./NoItems.vue?vue&type=script&lang=js\"\n\nimport \"./NoItems.vue?vue&type=style&index=0&id=4856c4d7&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4856c4d7\"]])\n\nexport default __exports__","<template>\n  <div class=\"media-youtube-feed\">\n    <Loading v-if=\"isLoading\" />\n    <NoItems :with-shadow=\"false\" v-else-if=\"!feed?.length\">\n      No videos found.\n    </NoItems>\n\n    <Results :results=\"feed\"\n             :filter=\"filter\"\n             :sources=\"{'youtube': true}\"\n             :selected-result=\"selectedResult\"\n             @add-to-playlist=\"$emit('add-to-playlist', $event)\"\n             @download=\"$emit('download', $event)\"\n             @download-audio=\"$emit('download-audio', $event)\"\n             @open-channel=\"$emit('open-channel', $event)\"\n             @select=\"selectedResult = $event\"\n             @play=\"$emit('play', $event)\"\n             @play-cache=\"$emit('play-cache', $event)\"\n             v-else />\n  </div>\n</template>\n\n<script>\nimport NoItems from \"@/components/elements/NoItems\";\nimport Loading from \"@/components/Loading\";\nimport Results from \"@/components/panels/Media/Results\";\nimport Utils from \"@/Utils\";\n\nexport default {\n  mixins: [Utils],\n  emits: [\n    'add-to-playlist',\n    'download',\n    'download-audio',\n    'open-channel',\n    'play',\n    'play-cache',\n  ],\n\n  components: {\n    Loading,\n    NoItems,\n    Results,\n  },\n\n  props: {\n    filter: {\n      type: String,\n      default: null,\n    },\n\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data() {\n    return {\n      feed: [],\n      loading_: false,\n      selectedResult: null,\n    }\n  },\n\n  computed: {\n    isLoading() {\n      return this.loading_ || this.loading\n    },\n  },\n\n  methods: {\n    async loadFeed() {\n      this.loading_ = true\n      try {\n        this.feed = (await this.request('youtube.get_feed')).map(item => ({\n          ...item,\n          type: 'youtube',\n        }))\n      } finally {\n        this.loading_ = false\n      }\n    },\n  },\n\n  mounted() {\n    this.loadFeed()\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.media-youtube-feed {\n  height: 100%;\n}\n</style>\n","import { render } from \"./Feed.vue?vue&type=template&id=1353fda8&scoped=true\"\nimport script from \"./Feed.vue?vue&type=script&lang=js\"\nexport * from \"./Feed.vue?vue&type=script&lang=js\"\n\nimport \"./Feed.vue?vue&type=style&index=0&id=1353fda8&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1353fda8\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","shadow","$props","withShadow","_renderSlot","_ctx","$slots","undefined","name","props","type","Boolean","default","__exports__","render","$options","isLoading","_createBlock","_component_Loading","key","$data","feed","length","_component_Results","results","filter","sources","selectedResult","onAddToPlaylist","_cache","$event","$emit","onDownload","onDownloadAudio","onOpenChannel","onSelect","onPlay","onPlayCache","_component_NoItems","mixins","Utils","emits","components","Loading","NoItems","Results","String","loading","data","loading_","computed","this","methods","loadFeed","request","map","item","mounted"],"sourceRoot":""}